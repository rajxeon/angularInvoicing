"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var NgxDOMComponentContainer_1 = require("./classes/NgxDOMComponentContainer");
var NgxDOMComponentComponent = /** @class */ (function () {
    function NgxDOMComponentComponent() {
        this.ngxDOMComponent = null;
        this.ngxDOMComponentContainer = new NgxDOMComponentContainer_1.NgxDOMComponentContainer(this.contentContainerRef);
    }
    NgxDOMComponentComponent.prototype.ngOnChanges = function () {
        if (this.config) {
            if (this.ngxDOMComponent !== null) {
                this.ngxDOMComponent.destroy();
            }
            this.ngxDOMComponent = this.ngxDOMComponentContainer.create(this.config);
        }
    };
    NgxDOMComponentComponent.prototype.ngOnDestroy = function () {
        if (this.ngxDOMComponent !== null) {
            this.ngxDOMComponent.destroy();
            this.ngxDOMComponent = null;
        }
    };
    NgxDOMComponentComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'ngx-dom-component',
                    template: "<ng-template #contentContainer></ng-template>"
                },] },
    ];
    /** @nocollapse */
    NgxDOMComponentComponent.ctorParameters = function () { return []; };
    NgxDOMComponentComponent.propDecorators = {
        "config": [{ type: core_1.Input },],
        "contentContainerRef": [{ type: core_1.ViewChild, args: ['contentContainer', { read: core_1.ViewContainerRef },] },],
    };
    return NgxDOMComponentComponent;
}());
exports.NgxDOMComponentComponent = NgxDOMComponentComponent;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRvbS1jb21wb25lbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vbGliL25neC1kb20tY29tcG9uZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUFvRztBQUNwRywrRUFBOEU7O0lBaUI1RTtRQUNFLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLG1EQUF3QixDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0tBQ3hGO0lBRUQsOENBQVcsR0FBWDtRQUNFLEVBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2YsRUFBRSxDQUFBLENBQUMsSUFBSSxDQUFDLGVBQWUsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUNqQyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxDQUFDO2FBQ2hDO1lBRUQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsd0JBQXdCLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMxRTtLQUNGO0lBRUQsOENBQVcsR0FBWDtRQUNFLEVBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxlQUFlLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNqQyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1NBQzdCO0tBQ0Y7O2dCQWxDRixnQkFBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFFBQVEsRUFBRSwrQ0FBK0M7aUJBQzFEOzs7OzsyQkFFRSxZQUFLO3dDQUdMLGdCQUFTLFNBQUMsa0JBQWtCLEVBQUUsRUFBRSxJQUFJLEVBQUUsdUJBQWdCLEVBQUU7O21DQVozRDs7QUFRYSw0REFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5neERPTUNvbXBvbmVudENvbnRhaW5lciB9IGZyb20gJy4vY2xhc3Nlcy9OZ3hET01Db21wb25lbnRDb250YWluZXInO1xyXG5pbXBvcnQgeyBOZ3hET01Db21wb25lbnQgfSBmcm9tICcuL2NsYXNzZXMvTmd4RE9NQ29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmd4LWRvbS1jb21wb25lbnQnLFxyXG4gIHRlbXBsYXRlOiBgPG5nLXRlbXBsYXRlICNjb250ZW50Q29udGFpbmVyPjwvbmctdGVtcGxhdGU+YFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4RE9NQ29tcG9uZW50Q29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIGNvbmZpZzogYW55O1xyXG5cclxuICBAVmlld0NoaWxkKCdjb250ZW50Q29udGFpbmVyJywgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pXHJcbiAgcHVibGljIGNvbnRlbnRDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWY7XHJcblxyXG4gIHByaXZhdGUgbmd4RE9NQ29tcG9uZW50Q29udGFpbmVyOiBOZ3hET01Db21wb25lbnRDb250YWluZXI7XHJcbiAgcHJpdmF0ZSBuZ3hET01Db21wb25lbnQ6IE5neERPTUNvbXBvbmVudCB8IG51bGw7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5uZ3hET01Db21wb25lbnQgPSBudWxsO1xyXG4gICAgdGhpcy5uZ3hET01Db21wb25lbnRDb250YWluZXIgPSBuZXcgTmd4RE9NQ29tcG9uZW50Q29udGFpbmVyKHRoaXMuY29udGVudENvbnRhaW5lclJlZik7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcygpOiB2b2lkIHtcclxuICAgIGlmKHRoaXMuY29uZmlnKSB7XHJcbiAgICAgIGlmKHRoaXMubmd4RE9NQ29tcG9uZW50ICE9PSBudWxsKSB7XHJcbiAgICAgICAgdGhpcy5uZ3hET01Db21wb25lbnQuZGVzdHJveSgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLm5neERPTUNvbXBvbmVudCA9IHRoaXMubmd4RE9NQ29tcG9uZW50Q29udGFpbmVyLmNyZWF0ZSh0aGlzLmNvbmZpZyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgIGlmKHRoaXMubmd4RE9NQ29tcG9uZW50ICE9PSBudWxsKSB7XHJcbiAgICAgIHRoaXMubmd4RE9NQ29tcG9uZW50LmRlc3Ryb3koKTtcclxuICAgICAgdGhpcy5uZ3hET01Db21wb25lbnQgPSBudWxsO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuIl19
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2dbf3cf32992b3148021","webpack:///external \"@angular/core\"","webpack:///./src/modal-dialog.component.ts","webpack:///./src/modal-dialog.service.ts","webpack:///./src/modal-dialog-instance.service.ts","webpack:///./src/simple-modal.component.ts","webpack:///./index.ts","webpack:///./src/modal-dialog.module.ts","webpack:///external \"rxjs/Observable\"","webpack:///external \"rxjs/Subject\"","webpack:///external \"rxjs/observable/fromPromise\"","webpack:///external \"rxjs/observable/of\"","webpack:///external \"rxjs/operators\"","webpack:///external \"@angular/common\""],"names":[],"mappings":"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","file":"ngx-modal.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/Subject\"), require(\"rxjs/observable/fromPromise\"), require(\"rxjs/observable/of\"), require(\"rxjs/operators\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"rxjs/Observable\", \"rxjs/Subject\", \"rxjs/observable/fromPromise\", \"rxjs/observable/of\", \"rxjs/operators\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-modal\"] = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/Subject\"), require(\"rxjs/observable/fromPromise\"), require(\"rxjs/observable/of\"), require(\"rxjs/operators\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ngx-modal\"] = factory(root[\"@angular/core\"], root[\"rxjs/Observable\"], root[\"rxjs/Subject\"], root[\"rxjs/observable/fromPromise\"], root[\"rxjs/observable/of\"], root[\"rxjs/operators\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2dbf3cf32992b3148021","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0","import {\n  Component,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ViewChild,\n  OnDestroy, OnInit\n} from '@angular/core';\nimport {\n  IModalDialog,\n  IModalDialogOptions,\n  IModalDialogButton,\n  IModalDialogSettings, ModalDialogOnAction\n} from './modal-dialog.interface';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { of } from 'rxjs/observable/of';\nimport { delay } from 'rxjs/operators';\n\n/**\n * Modal dialog component\n */\n@Component({\n  selector: 'modal-dialog',\n  styles: [`\n      @-moz-keyframes shake {\n        from, to                { transform: translate3d(0, 0, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, 0, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, 0, 0); }\n      }\n      @-webkit-keyframes shake {\n        from, to                { transform: translate3d(0, 0, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, 0, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, 0, 0); }\n      }\n      @keyframes shake {\n        from, to                { transform: translate3d(0, 0, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, 0, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, 0, 0); }\n      }\n\n      .ngx-modal {\n        display: flex;\n      }\n      .ngx-modal-shake {\n        backface-visibility: hidden;\n        -webkit-animation-duration: 0.5s;\n        -moz-animation-duration: 0.5s;\n        animation-duration: 0.5s;\n        -webkit-animation-fill-mode: both;\n        -moz-animation-fill-mode: both;\n        animation-fill-mode: both;\n        -webkit-animation-iteration-count: infinite;\n        -moz-animation-iteration-count: infinite;\n        animation-iteration-count: infinite;\n        -webkit-animation-name: shake;\n        -moz-animation-name: shake;\n        animation-name: shake;\n      }\n  `],\n  template: `\n    <div *ngIf=\"settings.overlayClass\" [ngClass]=\"[settings.overlayClass, animateOverlayClass]\"\n         (click)=\"(!actionButtons || !actionButtons.length) && close()\"></div>\n    <div [ngClass]=\"[settings.modalClass, animateModalClass]\">\n      <div [ngClass]=\"settings.modalDialogClass\">\n        <div [ngClass]=\"[ showAlert ? settings.alertClass : '', settings.contentClass]\">\n          <div [ngClass]=\"settings.headerClass\">\n            <h4 [ngClass]=\"settings.headerTitleClass\">{{title}}</h4>\n            <button (click)=\"close()\" *ngIf=\"!actionButtons || !actionButtons.length\" type=\"button\"\n                    [title]=\"settings.closeButtonTitle\"\n                    [ngClass]=\"settings.closeButtonClass\">\n            </button>\n          </div>\n          <div [ngClass]=\"settings.bodyClass\">\n            <i #modalDialogBody></i>\n          </div>\n          <div [ngClass]=\"settings.footerClass\" *ngIf=\"actionButtons && actionButtons.length\">\n            <button *ngFor=\"let button of actionButtons\" (click)=\"doAction(button.onAction)\"\n                    [ngClass]=\"button.buttonClass || settings.buttonClass\">{{button.text}}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class ModalDialogComponent implements IModalDialog, OnDestroy, OnInit {\n  @ViewChild('modalDialogBody', { read: ViewContainerRef })\n  public dynamicComponentTarget: ViewContainerRef;\n  public reference: ComponentRef<IModalDialog>;\n\n  /** Modal dialog style settings */\n  public settings: IModalDialogSettings = {\n    overlayClass: 'modal-backdrop fade',\n    overlayAnimationTriggerClass: 'show',\n    modalClass: 'modal ngx-modal fade',\n    modalAnimationTriggerClass: 'show',\n    modalDialogClass: 'modal-dialog modal-dialog-centered',\n    contentClass: 'modal-content',\n    headerClass: 'modal-header',\n    headerTitleClass: 'modal-title',\n    closeButtonClass: 'close glyphicon glyphicon-remove',\n    closeButtonTitle: 'CLOSE',\n    bodyClass: 'modal-body',\n    footerClass: 'modal-footer',\n    alertClass: 'ngx-modal-shake',\n    alertDuration: 250,\n    notifyWithAlert: true,\n    buttonClass: 'btn btn-primary'\n  };\n  public actionButtons: IModalDialogButton[];\n  public title: string;\n  public onClose: () => Promise<any> | Observable<any> | boolean;\n\n  public showAlert: boolean = false;\n  public animateOverlayClass = '';\n  public animateModalClass = '';\n\n  private _inProgress = false;\n  private _alertTimeout: number;\n  private _childInstance: any;\n  private _closeDialog$: Subject<void>;\n\n  /**\n   * CTOR\n   * @param componentFactoryResolver\n   */\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /**\n   * Initialize dialog with reference to instance and options\n   * @param reference\n   * @param options\n   */\n  dialogInit(reference: ComponentRef<IModalDialog>, options: Partial<IModalDialogOptions<any>> = {}) {\n    this.reference = reference;\n\n    // inject component\n    if (options.childComponent) {\n      let factory = this.componentFactoryResolver.resolveComponentFactory(options.childComponent);\n      let componentRef = this.dynamicComponentTarget.createComponent(factory) as ComponentRef<IModalDialog>;\n      this._childInstance = componentRef.instance as IModalDialog;\n\n      this._closeDialog$ = new Subject<void>();\n      this._closeDialog$.subscribe(() => {\n        this._finalizeAndDestroy();\n      });\n\n      options.closeDialogSubject = this._closeDialog$;\n\n      this._childInstance['dialogInit'](componentRef, options);\n      document.activeElement != null ?\n        (document.activeElement as HTMLElement).blur() :\n        (document.body as HTMLElement).blur();\n    }\n    // set options\n    this._setOptions(options);\n  }\n\n  ngOnInit() {\n    // a trick to defer css animations\n    of(void 0).pipe(delay(0)).subscribe(() => {\n      this.animateOverlayClass = this.settings.overlayAnimationTriggerClass;\n      this.animateModalClass = this.settings.modalAnimationTriggerClass;\n    });\n  }\n\n  /**\n   * Cleanup on destroy\n   */\n  ngOnDestroy() {\n    // run animations\n    this.animateOverlayClass = '';\n    this.animateModalClass = '';\n\n    // cleanup listeners\n    if (this._alertTimeout) {\n      clearTimeout(this._alertTimeout);\n      this._alertTimeout = null;\n    }\n\n    if (this._closeDialog$) {\n      this._closeDialog$.unsubscribe();\n    }\n  }\n\n  /**\n   * Run action defined on action button\n   * @param action\n   */\n  doAction(action?: ModalDialogOnAction) {\n    // disable multi clicks\n    if (this._inProgress) {\n      return;\n    }\n    this._inProgress = true;\n    this._closeIfSuccessful(action);\n  }\n\n  /**\n   * Method to run on close\n   * if action buttons are defined, it will not close\n   */\n  close() {\n    if (this._inProgress) {\n      return;\n    }\n    if (this.actionButtons && this.actionButtons.length) {\n      return;\n    }\n    this._inProgress = true;\n\n    if (this.onClose) {\n      this._closeIfSuccessful(this.onClose);\n      return;\n    }\n    this._finalizeAndDestroy();\n  }\n\n  /**\n   * Pass options from dialog setup to component\n   * @param  {IModalDialogOptions} options?\n   */\n  private _setOptions(options: Partial<IModalDialogOptions<any>>) {\n\n    if (options.onClose && options.actionButtons && options.actionButtons.length) {\n      throw new Error(`OnClose callback and ActionButtons are not allowed to be defined on the same dialog.`);\n    }\n    // set references\n    this.title = (options && options.title) || '';\n    this.onClose = (options && options.onClose) || null;\n    this.actionButtons = (this._childInstance && this._childInstance['actionButtons']) ||\n      (options && options.actionButtons) || null;\n    if (options && options.settings) {\n      Object.assign(this.settings, options.settings);\n    }\n  }\n\n  /**\n   * Close if successful\n   * @param callback\n   */\n  private _closeIfSuccessful(callback: ModalDialogOnAction) {\n    if (!callback) {\n      return this._finalizeAndDestroy();\n    }\n\n    let response = callback();\n    if (typeof response === 'boolean') {\n      if (response) {\n        return this._finalizeAndDestroy();\n      }\n      return this._triggerAlert();\n    }\n    if (response instanceof Promise) {\n      response = fromPromise(<Promise<any>>response);\n    }\n    if (response instanceof Observable) {\n      response.subscribe(() => {\n        this._finalizeAndDestroy();\n      }, () => {\n        this._triggerAlert();\n      });\n    } else {\n      this._inProgress = false;\n    }\n  }\n\n  private _finalizeAndDestroy() {\n    this._inProgress = false;\n    this.reference.destroy();\n  }\n\n  private _triggerAlert() {\n    if (this.settings.notifyWithAlert) {\n      this.showAlert = true;\n      this._alertTimeout = window.setTimeout(() => {\n        this.showAlert = false;\n        this._inProgress = false;\n        clearTimeout(this._alertTimeout);\n        this._alertTimeout = null;\n      }, this.settings.alertDuration);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/modal-dialog.component.ts","import { ComponentFactoryResolver, ViewContainerRef, Inject } from '@angular/core';\nimport { ModalDialogComponent } from './modal-dialog.component';\nimport { IModalDialogOptions } from './modal-dialog.interface';\nimport { ModalDialogInstanceService } from './modal-dialog-instance.service';\n\nexport class ModalDialogService {\n  /**\n   * CTOR\n   * @param componentFactoryResolver\n   * @param modalDialogInstanceService\n   */\n  constructor(@Inject(ComponentFactoryResolver) private componentFactoryResolver: ComponentFactoryResolver,\n              @Inject(ModalDialogInstanceService) private modalDialogInstanceService: ModalDialogInstanceService) {\n  }\n\n  /**\n   * Open dialog in given target element with given options\n   * @param  {ViewContainerRef} target\n   * @param  {IModalDialogOptions} options?\n   */\n  openDialog(target: ViewContainerRef, options: Partial<IModalDialogOptions<any>> = {}) {\n    this.modalDialogInstanceService.closeAnyExistingModalDialog();\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(ModalDialogComponent);\n    const componentRef = target.createComponent(factory);\n    componentRef.instance.dialogInit(componentRef, options);\n\n    this.modalDialogInstanceService.saveExistingModalDialog(componentRef);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/modal-dialog.service.ts","import { ComponentRef } from '@angular/core';\nimport { ModalDialogComponent } from './modal-dialog.component';\n\nexport class ModalDialogInstanceService {\n  /**\n   * Used to make sure there is exactly one instance of Modal Dialog\n   */\n  private componentRef: ComponentRef<ModalDialogComponent>;\n\n  /**\n   * Closes existing modal dialog\n   */\n  closeAnyExistingModalDialog() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  /**\n   * Save component ref for future comparison\n   * @param componentRef\n   */\n  saveExistingModalDialog(componentRef: ComponentRef<ModalDialogComponent>) {\n    this.componentRef = componentRef;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/modal-dialog-instance.service.ts","import { Component, ComponentRef } from '@angular/core';\nimport { IModalDialog, IModalDialogOptions } from './modal-dialog.interface';\n\nexport interface ISimpleModalDataOptions {\n  text: string;\n}\n\n@Component({\n  selector: 'simple-modal-dialog',\n  template: ``,\n  styles: [':host { display: block; }'],\n  host: {\n    '[innerHTML]': 'text'\n  }\n})\nexport class SimpleModalComponent implements IModalDialog {\n  text: string;\n\n  /**\n   * Initialize dialog with simple HTML content\n   * @param {ComponentRef<IModalDialog>} reference\n   * @param {Partial<IModalDialogOptions>} options\n   */\n  dialogInit(reference: ComponentRef<IModalDialog>, options: Partial<IModalDialogOptions<ISimpleModalDataOptions>>) {\n    if (!options.data) {\n      throw new Error(`Data information for simple modal dialog is missing`);\n    }\n    this.text = options.data.text;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/simple-modal.component.ts","export * from './src/modal-dialog.module';\nexport * from './src/modal-dialog.service';\nexport * from './src/modal-dialog.component';\nexport * from './src/modal-dialog.interface';\nexport * from './src/simple-modal.component';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./index.ts","// components and directives\nimport { ModalDialogComponent } from './modal-dialog.component';\nimport { ModalDialogService } from './modal-dialog.service';\nimport { SimpleModalComponent } from './simple-modal.component';\nimport { ModalDialogInstanceService } from './modal-dialog-instance.service';\n// modules\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ModalDialogComponent, SimpleModalComponent],\n  entryComponents: [ModalDialogComponent, SimpleModalComponent],\n  exports: [ModalDialogComponent, SimpleModalComponent],\n  providers: [ModalDialogService]\n})\nexport class ModalDialogModule {\n\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ModalDialogModule,\n      providers: [ModalDialogInstanceService]\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/modal-dialog.module.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Observable\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Subject\"\n// module id = 8\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/observable/fromPromise\"\n// module id = 9\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/observable/of\"\n// module id = 10\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/operators\"\n// module id = 11\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}
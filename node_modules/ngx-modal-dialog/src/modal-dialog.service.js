import { ComponentFactoryResolver, Inject } from '@angular/core';
import { ModalDialogComponent } from './modal-dialog.component';
import { ModalDialogInstanceService } from './modal-dialog-instance.service';
var ModalDialogService = (function () {
    /**
     * CTOR
     * @param componentFactoryResolver
     * @param modalDialogInstanceService
     */
    function ModalDialogService(componentFactoryResolver, modalDialogInstanceService) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.modalDialogInstanceService = modalDialogInstanceService;
    }
    /**
     * Open dialog in given target element with given options
     * @param  {ViewContainerRef} target
     * @param  {IModalDialogOptions} options?
     */
    ModalDialogService.prototype.openDialog = function (target, options) {
        if (options === void 0) { options = {}; }
        this.modalDialogInstanceService.closeAnyExistingModalDialog();
        var factory = this.componentFactoryResolver.resolveComponentFactory(ModalDialogComponent);
        var componentRef = target.createComponent(factory);
        componentRef.instance.dialogInit(componentRef, options);
        this.modalDialogInstanceService.saveExistingModalDialog(componentRef);
    };
    return ModalDialogService;
}());
export { ModalDialogService };
/** @nocollapse */
ModalDialogService.ctorParameters = function () { return [
    { type: ComponentFactoryResolver, decorators: [{ type: Inject, args: [ComponentFactoryResolver,] },] },
    { type: ModalDialogInstanceService, decorators: [{ type: Inject, args: [ModalDialogInstanceService,] },] },
]; };
